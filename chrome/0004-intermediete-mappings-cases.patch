commit 82b4658f2d2b2ef505d8b9664166d23747d7bfd9
Author: Agata Belkius <abelkius@gmail.com>
Date:   Wed May 29 17:51:23 2024 +0100

    add test cases for intermediate mappings, move all tests to one it block

diff --git a/front_end/core/sdk/SourceMapSpec.test.ts b/front_end/core/sdk/SourceMapSpec.test.ts
index 2d6818f785..22e6246674 100644
--- a/front_end/core/sdk/SourceMapSpec.test.ts
+++ b/front_end/core/sdk/SourceMapSpec.test.ts
@@ -7,23 +7,14 @@
  This file tests if devtools sourcemaps implementation is matching the sourcemaps spec.
  Sourcemap Spec tests are using test data coming from: https://github.com/takikawa/source-map-tests
 
- At the moment only basic mapping tests are implemented. Expected results:
-
-  ==== FAIL: SourceMapSpec/checks mappings for valid-mapping-null-sources.js.map
-  AssertionError: unexpected source URL: expected 'null' to equal null
-      at front_end/core/sdk/SourceMapSpec.test.ts:74:20 <- out/Default/gen/front_end/core/sdk/SourceMapSpec.test.js:25:32
-      at Array.forEach (<anonymous>)
-      at Context.<anonymous> (front_end/core/sdk/SourceMapSpec.test.ts:62:21 <- out/Default/gen/front_end/core/sdk/SourceMapSpec.test.js:21:29)
-
-  - expected
-  + actual
-
-  -[null]
-  +"null"
-  ==============================================================================
-
-  FAILED: 1 failed, 46 passed (0 skipped)
-  ERRORS DETECTED
+ At the moment only basic mapping tests are implemented. 
+ 
+ There is a lot of warnings of invalid source maps passing the validation - this is up to the authors 
+ which ones of these could be actually checked in the SourceMaps implementetion and which ones are ok to ignore.
+ 
+ Expected results:
+ 
+  SUCCESS: 69 passed (0 skipped)
 
  **/ 
 
@@ -51,6 +42,7 @@ interface TestAction {
   originalLine: number;
   originalColumn: number;
   mappedName: null | string;
+  intermediateMaps?:  string[]
 }
 
 const testCases = await loadTestCasesFromFixture('source-map-spec-tests.json');
@@ -70,7 +62,10 @@ describeWithEnvironment.only('SourceMapSpec', async () => {
       // 1) check if an invalid sourcemap throws on SourceMap instance creation
       if (!sourceMapIsValid && [
         'sourcesMissing', 
-        'indexMapMissingOffset'
+        'indexMapMissingOffset',
+        'indexMapWrongTypeSections',
+        'indexMapWrongTypeMap',
+        'ignoreListWrongType3'
       ].includes(name)) {
         assert.throws(() => new SDK.SourceMap.SourceMap(
           baseFile as Platform.DevToolsPath.UrlString, 
@@ -89,7 +84,8 @@ describeWithEnvironment.only('SourceMapSpec', async () => {
         'invalidMappingSegmentBadSeparator',
         'invalidMappingSegmentWithZeroFields',
         'invalidMappingSegmentWithTwoFields',
-        'invalidMappingSegmentWithThreeFields'
+        'invalidMappingSegmentWithThreeFields',
+        'invalidVLQDueToMissingContinuationDigits'
       ].includes(name)) {
         const sourceMap = new SDK.SourceMap.SourceMap(
           baseFile as Platform.DevToolsPath.UrlString, 
@@ -115,7 +111,7 @@ describeWithEnvironment.only('SourceMapSpec', async () => {
         sourceMap.mappings();
         // TODO - right now most of the failure scenarios are actually passing
         assert.equal(consoleErrorSpy.notCalled, true);
-        console.warn('Invalid sourcemap passes basic validation');
+        console.warn(`Invalid sourcemap passes basic validation: ${sourceMapFile}`);
       }
 
       
@@ -140,18 +136,48 @@ describeWithEnvironment.only('SourceMapSpec', async () => {
       assert.doesNotThrow(() => sourceMap.findEntry(1, 1));
       
       if (testActions !== undefined) {
-        testActions.forEach(({
+        testActions.forEach(async ({
           actionType,
           originalSource,
           originalLine, 
           originalColumn,
           generatedLine,
-          generatedColumn
+          generatedColumn,
+          intermediateMaps
         }) => {
+          
           if (actionType === "checkMapping" && sourceMapIsValid) {
-            const actual = sourceMap.findEntry(generatedLine, generatedColumn);
+            // 5a) check if the mappings are valid for regular sourcemaps
+            // extract to separate function
+            let actual = sourceMap.findEntry(generatedLine, generatedColumn);
             assertNotNullOrUndefined(actual);
       
+            assert.strictEqual(actual.sourceURL, originalSource, 'unexpected source URL');
+            assert.strictEqual(actual.sourceLineNumber, originalLine, 'unexpected source line number');
+            assert.strictEqual(actual.sourceColumnNumber, originalColumn, 'unexpected source column number');
+          } else if (actionType === "checkMappingTransitive") {
+            // 5b) check if the mappings are valid for transative sourcemaps
+            // extract to separate function
+
+            assert.strictEqual(Array.isArray(intermediateMaps), true);
+            if (!intermediateMaps) {
+              return;
+            }
+            
+            let actual = sourceMap.findEntry(generatedLine, generatedColumn);
+
+            for (let intermediateMapPath of intermediateMaps) {
+              const intermediereSourceMapContent = await loadSourceMapFromFixture(sourceMapFile); 
+
+              const sourceMap = new SDK.SourceMap.SourceMap(
+                baseFileUrl, 
+                intermediateMapPath as Platform.DevToolsPath.UrlString,
+                intermediereSourceMapContent
+              );
+              actual = sourceMap.findEntry(generatedLine, generatedColumn);
+            }
+
+            assertNotNullOrUndefined(actual);
             assert.strictEqual(actual.sourceURL, originalSource, 'unexpected source URL');
             assert.strictEqual(actual.sourceLineNumber, originalLine, 'unexpected source line number');
             assert.strictEqual(actual.sourceColumnNumber, originalColumn, 'unexpected source column number');
diff --git a/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn b/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
index f39bf7afc6..c29ad6def8 100644
--- a/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
+++ b/front_end/core/sdk/fixtures/sourcemaps/BUILD.gn
@@ -11,10 +11,26 @@ copy_to_gen("sourcemaps") {
     "basic-mapping-original.js",
     "basic-mapping.js",
     "basic-mapping.js.map",
+    "ignore-list-empty.js",
+    "ignore-list-empty.js.map",
+    "ignore-list-out-of-bounds.js",
+    "ignore-list-out-of-bounds.js.map",
+    "ignore-list-valid-1.js",
+    "ignore-list-valid-1.js.map",
+    "ignore-list-wrong-type-1.js",
+    "ignore-list-wrong-type-1.js.map",
+    "ignore-list-wrong-type-2.js",
+    "ignore-list-wrong-type-2.js.map",
+    "ignore-list-wrong-type-3.js",
+    "ignore-list-wrong-type-3.js.map",
     "index-map-invalid-base-mappings.js",
     "index-map-invalid-base-mappings.js.map",
+    "index-map-invalid-order.js",
+    "index-map-invalid-order.js.map",
     "index-map-invalid-overlap.js",
     "index-map-invalid-overlap.js.map",
+    "index-map-missing-map.js",
+    "index-map-missing-map.js.map",
     "index-map-missing-offset-column.js",
     "index-map-missing-offset-column.js.map",
     "index-map-missing-offset-line.js",
@@ -25,6 +41,14 @@ copy_to_gen("sourcemaps") {
     "index-map-offset-column-wrong-type.js.map",
     "index-map-offset-line-wrong-type.js",
     "index-map-offset-line-wrong-type.js.map",
+    "index-map-two-concatenated-sources.js",
+    "index-map-two-concatenated-sources.js.map",
+    "index-map-wrong-type-map.js",
+    "index-map-wrong-type-map.js.map",
+    "index-map-wrong-type-offset.js",
+    "index-map-wrong-type-offset.js.map",
+    "index-map-wrong-type-sections.js",
+    "index-map-wrong-type-sections.js.map",
     "invalid-mapping-bad-separator.js",
     "invalid-mapping-bad-separator.js.map",
     "invalid-mapping-not-a-string-1.js",
@@ -45,6 +69,16 @@ copy_to_gen("sourcemaps") {
     "invalid-mapping-segment-negative-original-column.js.map",
     "invalid-mapping-segment-negative-original-line.js",
     "invalid-mapping-segment-negative-original-line.js.map",
+    "invalid-mapping-segment-negative-relative-column.js",
+    "invalid-mapping-segment-negative-relative-column.js.map",
+    "invalid-mapping-segment-negative-relative-name-index.js",
+    "invalid-mapping-segment-negative-relative-name-index.js.map",
+    "invalid-mapping-segment-negative-relative-original-column.js",
+    "invalid-mapping-segment-negative-relative-original-column.js.map",
+    "invalid-mapping-segment-negative-relative-original-line.js",
+    "invalid-mapping-segment-negative-relative-original-line.js.map",
+    "invalid-mapping-segment-negative-relative-source-index.js",
+    "invalid-mapping-segment-negative-relative-source-index.js.map",
     "invalid-mapping-segment-negative-source-index.js",
     "invalid-mapping-segment-negative-source-index.js.map",
     "invalid-mapping-segment-original-column-too-large.js",
@@ -61,6 +95,8 @@ copy_to_gen("sourcemaps") {
     "invalid-mapping-segment-with-two-fields.js.map",
     "invalid-mapping-segment-with-zero-fields.js",
     "invalid-mapping-segment-with-zero-fields.js.map",
+    "invalid-vlq-missing-continuation.js",
+    "invalid-vlq-missing-continuation.js.map",
     "invalid-vlq-non-base64-char.js",
     "invalid-vlq-non-base64-char.js.map",
     "names-missing.js",
@@ -71,15 +107,29 @@ copy_to_gen("sourcemaps") {
     "names-not-a-list-2.js.map",
     "names-not-string.js",
     "names-not-string.js.map",
+    "second-source-original.js",
     "source-map-spec-tests.json",
+    "sources-and-sources-content-both-null.js",
+    "sources-and-sources-content-both-null.js.map",
     "sources-missing.js",
     "sources-missing.js.map",
+    "sources-non-null-sources-content-null.js",
+    "sources-non-null-sources-content-null.js.map",
     "sources-not-a-list-1.js",
     "sources-not-a-list-1.js.map",
     "sources-not-a-list-2.js",
     "sources-not-a-list-2.js.map",
     "sources-not-string-or-null.js",
     "sources-not-string-or-null.js.map",
+    "sources-null-sources-content-non-null.js",
+    "sources-null-sources-content-non-null.js.map",
+    "transitive-mapping-original.js",
+    "transitive-mapping-original.js.map",
+    "transitive-mapping-three-steps.js",
+    "transitive-mapping-three-steps.js.map",
+    "transitive-mapping.js",
+    "transitive-mapping.js.map",
+    "typescript-original.ts",
     "unrecognized-property.js",
     "unrecognized-property.js.map",
     "valid-mapping-boundary-values.js",
diff --git a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
index 0863d44e62..8a6d4b5dc7 100644
--- a/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
+++ b/front_end/core/sdk/fixtures/sourcemaps/basic-mapping-as-index-map.js.map
@@ -7,16 +7,7 @@
         "version": 3,
         "names": ["foo","bar"],
         "sources": ["basic-mapping-original.js"],
-        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA"
-      }
-    },
-    {
-      "offset": { "line": 0, "column": 34 },
-      "map": {
-        "version": 3,
-        "names": ["foo","bar"],
-        "sources": ["basic-mapping-original.js"],
-        "mappings": "AAGSC,MACP,OAAO,EACT,CACAD,MACAC"
+        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
       }
     }
   ]
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js
new file mode 100644
index 0000000000..385a5c3501
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-empty.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map
new file mode 100644
index 0000000000..7297863a9b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-empty.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": []
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js
new file mode 100644
index 0000000000..7a0fbb8833
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-out-of-bounds.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map
new file mode 100644
index 0000000000..fb2566bb41
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-out-of-bounds.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": [1]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js
new file mode 100644
index 0000000000..ea64a5565a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-valid-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map
new file mode 100644
index 0000000000..98eebdf7f6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-valid-1.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": [0]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js
new file mode 100644
index 0000000000..8b40bd3847
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-1.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map
new file mode 100644
index 0000000000..688740aba8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-1.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": ["not a number"]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js
new file mode 100644
index 0000000000..35c7791164
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-2.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map
new file mode 100644
index 0000000000..ca1d30de2d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-2.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": ["0"]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js
new file mode 100644
index 0000000000..8735d41758
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js
@@ -0,0 +1 @@
+//# sourceMappingURL=ignore-list-wrong-type-3.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map
new file mode 100644
index 0000000000..1ac167d56c
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/ignore-list-wrong-type-3.js.map
@@ -0,0 +1,8 @@
+{
+  "version" : 3,
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "",
+  "names": [],
+  "ignoreList": 0
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js
new file mode 100644
index 0000000000..263fa3c6e0
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-invalid-order.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map
new file mode 100644
index 0000000000..82da69df72
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-invalid-order.js.map
@@ -0,0 +1,23 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 1, "column": 4 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    },
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js
new file mode 100644
index 0000000000..86c8e9a253
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-missing-map.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map
new file mode 100644
index 0000000000..3bce47e852
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-missing-map.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js
new file mode 100644
index 0000000000..b8702d7187
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();function baz(){return"baz"}baz();
+//# sourceMappingURL=index-map-two-concatenated-sources.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map
new file mode 100644
index 0000000000..f5e5214abb
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-two-concatenated-sources.js.map
@@ -0,0 +1,23 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": {
+        "version": 3,
+        "names": ["foo","bar"],
+        "sources": ["basic-mapping-original.js"],
+        "mappings": "AAAA,SAASA,MACP,OAAO,EACT,CACA,SAASC,MACP,OAAO,EACT,CACAD,MACAC"
+      }
+    },
+    {
+      "offset": { "line": 0, "column": 62 },
+      "map": {
+        "version": 3,
+        "names": ["baz"],
+        "sources": ["second-source-original.js"],
+        "mappings":"AAAA,SAASA,MACP,MAAO,KACT,CACAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js
new file mode 100644
index 0000000000..d31d6d6358
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-map.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map
new file mode 100644
index 0000000000..0963f623d7
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-map.js.map
@@ -0,0 +1,9 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": { "line": 0, "column": 0 },
+      "map": "not a map"
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js
new file mode 100644
index 0000000000..048e1246f8
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-offset.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map
new file mode 100644
index 0000000000..fbc6e4e678
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-offset.js.map
@@ -0,0 +1,14 @@
+{
+  "version": 3,
+  "sections": [
+    {
+      "offset": "not an offset",
+      "map": {
+        "version": 3,
+        "names": [],
+        "sources": ["empty-original.js"],
+        "mappings": "AAAA"
+      }
+    }
+  ]
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js
new file mode 100644
index 0000000000..011eca806e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js
@@ -0,0 +1 @@
+//# sourceMappingURL=index-map-wrong-type-sections.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map
new file mode 100644
index 0000000000..dbfb4ead30
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/index-map-wrong-type-sections.js.map
@@ -0,0 +1,4 @@
+{
+  "version": 3,
+  "sections": "not a sections list"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js
new file mode 100644
index 0000000000..94b835d687
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map
new file mode 100644
index 0000000000..414884072b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-column.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-column.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "C,F"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js
new file mode 100644
index 0000000000..c965c5f011
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-name-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map
new file mode 100644
index 0000000000..1fbbcfcd32
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-name-index.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-name-index.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AAAAC,AAAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js
new file mode 100644
index 0000000000..493a6ec88a
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-original-column.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map
new file mode 100644
index 0000000000..7e62895651
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-column.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-original-column.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AAAC,AAAF"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js
new file mode 100644
index 0000000000..ca8329fb98
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-original-line.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map
new file mode 100644
index 0000000000..86b0fb3a04
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-original-line.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-original-line.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "AACA,AAFA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js
new file mode 100644
index 0000000000..fa92225b09
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-mapping-segment-negative-relative-source-index.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map
new file mode 100644
index 0000000000..2efeb047db
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-mapping-segment-negative-relative-source-index.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "names": [],
+  "file": "invalid-mapping-segment-negative-relative-source-index.js",
+  "sources": ["empty-original.js"],
+  "sourcesContent": [""],
+  "mappings": "ACAA,AFAA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js
new file mode 100644
index 0000000000..2c2a0090ac
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js
@@ -0,0 +1 @@
+//# sourceMappingURL=invalid-vlq-missing-continuation.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map
new file mode 100644
index 0000000000..dd0e363ff4
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/invalid-vlq-missing-continuation.js.map
@@ -0,0 +1,6 @@
+{
+  "version" : 3,
+  "sources": [],
+  "names": [],
+  "mappings": "g"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js b/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js
new file mode 100644
index 0000000000..c339bc9d15
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/second-source-original.js
@@ -0,0 +1,4 @@
+function baz() {
+  return "baz";
+}
+baz();
diff --git a/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json b/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
index 7e7350b28e..d4ec5aa380 100644
--- a/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
+++ b/front_end/core/sdk/fixtures/sourcemaps/source-map-spec-tests.json
@@ -70,6 +70,13 @@
       "sourceMapFile": "sources-not-string-or-null.js.map",
       "sourceMapIsValid": false
     },
+    {
+      "name": "sourcesAndSourcesContentBothNull",
+      "description": "Test a source map that has both null sources and sourcesContent entries",
+      "baseFile": "sources-and-sources-content-both-null.js",
+      "sourceMapFile": "sources-and-sources-content-both-null.js.map",
+      "sourceMapIsValid": true
+    },
     {
       "name": "namesMissing",
       "description": "Test a source map that is missing a necessary names field",
@@ -98,6 +105,54 @@
       "sourceMapFile": "names-not-string.js.map",
       "sourceMapIsValid": false
     },
+    {
+      "name": "ignoreListEmpty",
+      "description": "Test a source map with an ignore list that has no items",
+      "baseFile": "ignore-list-empty.js",
+      "sourceMapFile": "ignore-list-empty.js.map",
+      "sourceMapIsValid": true
+    },
+    {
+      "name": "ignoreListValid1",
+      "description": "Test a source map with a simple valid ignore list",
+      "baseFile": "ignore-list-valid-1.js",
+      "sourceMapFile": "ignore-list-valid-1.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkIgnoreList",
+          "present": ["empty-original.js"]
+        }
+      ]
+    },
+    {
+      "name": "ignoreListWrongType1",
+      "description": "Test a source map with an ignore list with the wrong type of items",
+      "baseFile": "ignore-list-wrong-type-1.js",
+      "sourceMapFile": "ignore-list-wrong-type-1.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListWrongType2",
+      "description": "Test a source map with an ignore list with the wrong type of items",
+      "baseFile": "ignore-list-wrong-type-2.js",
+      "sourceMapFile": "ignore-list-wrong-type-2.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListWrongType3",
+      "description": "Test a source map with an ignore list that is not a list",
+      "baseFile": "ignore-list-wrong-type-3.js",
+      "sourceMapFile": "ignore-list-wrong-type-3.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "ignoreListOutOfBounds",
+      "description": "Test a source map with an ignore list with an item with an out-of-bounds index",
+      "baseFile": "ignore-list-out-of-bounds.js",
+      "sourceMapFile": "ignore-list-out-of-bounds.js.map",
+      "sourceMapIsValid": false
+    },
     {
       "name": "unrecognizedProperty",
       "description": "Test a source map that has an extra field not explicitly encoded in the spec",
@@ -112,6 +167,13 @@
       "sourceMapFile": "invalid-vlq-non-base64-char.js.map",
       "sourceMapIsValid": false
     },
+    {
+      "name": "invalidVLQDueToMissingContinuationDigits",
+      "description": "Test a source map that has a mapping with an invalid VLQ that has a continuation bit but no continuing digits",
+      "baseFile": "invalid-vlq-missing-continuation.js",
+      "sourceMapFile": "invalid-vlq-missing-continuation.js.map",
+      "sourceMapIsValid": false
+    },
     {
       "name": "invalidMappingNotAString1",
       "description": "Test a source map that has an invalid mapping that is not a string (number)",
@@ -203,6 +265,41 @@
       "sourceMapFile": "invalid-mapping-segment-negative-name-index.js.map",
       "sourceMapIsValid": false
     },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeColumn",
+      "description": "Test a source map that has an invalid negative relative column field",
+      "baseFile": "invalid-mapping-segment-negative-relative-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeSourceIndex",
+      "description": "Test a source map that has an invalid negative relative source index field",
+      "baseFile": "invalid-mapping-segment-negative-relative-source-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-source-index.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeOriginalLine",
+      "description": "Test a source map that has an invalid negative relative original line field",
+      "baseFile": "invalid-mapping-segment-negative-relative-original-line.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-original-line.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeOriginalColumn",
+      "description": "Test a source map that has an invalid negative relative original column field",
+      "baseFile": "invalid-mapping-segment-negative-relative-original-column.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-original-column.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "invalidMappingSegmentWithNegativeRelativeNameIndex",
+      "description": "Test a source map that has an invalid negative relative name index field",
+      "baseFile": "invalid-mapping-segment-negative-relative-name-index.js",
+      "sourceMapFile": "invalid-mapping-segment-negative-relative-name-index.js.map",
+      "sourceMapIsValid": false
+    },
     {
       "name": "invalidMappingSegmentWithColumnExceeding32Bits",
       "description": "Test a source map that has a column field that exceeds 32 bits",
@@ -260,7 +357,28 @@
       "sourceMapIsValid": true
     },
     {
-      "name": "indexMapInvalidBaseMapings",
+      "name": "indexMapWrongTypeSections",
+      "description": "Test an index map with a sections field with the wrong type",
+      "baseFile": "index-map-wrong-type-sections.js",
+      "sourceMapFile": "index-map-wrong-type-sections.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapWrongTypeOffset",
+      "description": "Test an index map with an offset field with the wrong type",
+      "baseFile": "index-map-wrong-type-offset.js",
+      "sourceMapFile": "index-map-wrong-type-offset.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapWrongTypeMap",
+      "description": "Test an index map with a map field with the wrong type",
+      "baseFile": "index-map-wrong-type-map.js",
+      "sourceMapFile": "index-map-wrong-type-map.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapInvalidBaseMappings",
       "description": "Test that an index map cannot also have a regular mappings field",
       "baseFile": "index-map-invalid-base-mappings.js",
       "sourceMapFile": "index-map-invalid-base-mappings.js.map",
@@ -273,6 +391,20 @@
       "sourceMapFile": "index-map-invalid-overlap.js.map",
       "sourceMapIsValid": false
     },
+    {
+      "name": "indexMapInvalidOrder",
+      "description": "Test that an invalid index map with multiple sections in the wrong order",
+      "baseFile": "index-map-invalid-order.js",
+      "sourceMapFile": "index-map-invalid-order.js.map",
+      "sourceMapIsValid": false
+    },
+    {
+      "name": "indexMapMissingMap",
+      "description": "Test that an index map that is missing a section map",
+      "baseFile": "index-map-missing-map.js",
+      "sourceMapFile": "index-map-missing-map.js.map",
+      "sourceMapIsValid": false
+    },
     {
       "name": "indexMapMissingOffset",
       "description": "Test that an index map that is missing a section offset",
@@ -543,10 +675,181 @@
       ]
     },
     {
-      "name": "validMappingNullSources",
-      "description": "Test a source map that has null sources",
-      "baseFile": "valid-mapping-null-sources.js",
-      "sourceMapFile": "valid-mapping-null-sources.js.map",
+      "name": "indexMapWithTwoConcatenatedSources",
+      "description": "Test an index map that has two sub-maps for concatenated sources",
+      "baseFile": "index-map-two-concatenated-sources.js",
+      "sourceMapFile": "index-map-two-concatenated-sources.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 15,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 22,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 34,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 3,
+          "originalColumn": 9,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 40,
+          "originalLine": 4,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 47,
+          "originalLine": 4,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 49,
+          "originalLine": 5,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 50,
+          "originalLine": 6,
+          "originalColumn": 0,
+          "mappedName": "foo"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "basic-mapping-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 56,
+          "originalLine": 7,
+          "originalColumn": 0,
+          "mappedName": "bar"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 62,
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 71,
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "baz"
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 77,
+          "originalLine": 1,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 83,
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 88,
+          "originalLine": 2,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "originalSource": "second-source-original.js",
+          "generatedLine": 0,
+          "generatedColumn": 89,
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": "baz"
+        }
+      ]
+    },
+    {
+      "name": "sourcesNullSourcesContentNonNull",
+      "description": "Test a source map that has a null source but has a sourcesContent",
+      "baseFile": "sources-null-sources-content-non-null.js",
+      "sourceMapFile": "sources-null-sources-content-non-null.js.map",
       "sourceMapIsValid": true,
       "testActions": [
         {
@@ -568,6 +871,211 @@
           "mappedName": "foo"
         }
       ]
+    },
+    {
+      "name": "sourcesNonNullSourcesContentNull",
+      "description": "Test a source map that has a non-null source but has a null sourcesContent",
+      "baseFile": "sources-non-null-sources-content-null.js",
+      "sourceMapFile": "sources-non-null-sources-content-null.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMapping",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "basic-mapping-original.js",
+          "originalLine": 0,
+          "originalColumn": 9,
+          "mappedName": "foo"
+        }
+      ]
+    },
+    {
+      "name": "transitiveMapping",
+      "description": "Test a simple two-stage transitive mapping from a minified JS to a TypeScript source",
+      "baseFile": "transitive-mapping.js",
+      "sourceMapFile": "transitive-mapping.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 13,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 13,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 16,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 23,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 24,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 25,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 29,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 4,
+          "mappedName": null
+        }
+      ]
+    },
+    {
+      "name": "transitiveMappingWithThreeSteps",
+      "description": "Test a three-stage transitive mapping from an un-minified JS to minified JS to a TypeScript source",
+      "baseFile": "transitive-mapping-three-steps.js",
+      "sourceMapFile": "transitive-mapping-three-steps.js.map",
+      "sourceMapIsValid": true,
+      "testActions": [
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 9,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 0,
+          "generatedColumn": 13,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 1,
+          "originalColumn": 13,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 1,
+          "generatedColumn": 4,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 2,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 1,
+          "generatedColumn": 11,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 2,
+          "originalColumn": 9,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 2,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 3,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 4,
+          "generatedColumn": 0,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 0,
+          "mappedName": null
+        },
+        {
+          "actionType": "checkMappingTransitive",
+          "generatedLine": 4,
+          "generatedColumn": 4,
+          "originalSource": "typescript-original.ts",
+          "intermediateMaps": ["transitive-mapping.js.map", "transitive-mapping-original.js.map"],
+          "originalLine": 4,
+          "originalColumn": 4,
+          "mappedName": null
+        }
+      ]
     }
   ]
 }
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js
new file mode 100644
index 0000000000..9263eba549
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js
@@ -0,0 +1 @@
+//# sourceMappingURL=sources-and-sources-content-both-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map
new file mode 100644
index 0000000000..09a7c1f369
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-and-sources-content-both-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "sources": [null],
+  "sourcesContent": [null],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js
new file mode 100644
index 0000000000..939b568ba1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=sources-non-null-sources-content-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map
new file mode 100644
index 0000000000..e573906b2d
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-non-null-sources-content-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "names": ["foo"],
+  "sources": ["basic-mapping-original.js"],
+  "sourcesContent": [null],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js
new file mode 100644
index 0000000000..a760594ee9
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js
@@ -0,0 +1,2 @@
+function foo(){return 42}function bar(){return 24}foo();bar();
+//# sourceMappingURL=sources-null-sources-content-non-null.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map
new file mode 100644
index 0000000000..43af03903f
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/sources-null-sources-content-non-null.js.map
@@ -0,0 +1,7 @@
+{
+  "version":3,
+  "names": ["foo"],
+  "sources": [null],
+  "sourcesContent": ["function foo()\n{ return 42; }\nfunction bar()\n { return 24; }\nfoo();\nbar();"],
+  "mappings":"AAAA,SAASA"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js
new file mode 100644
index 0000000000..0a96699d6e
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js
@@ -0,0 +1,5 @@
+function foo(x) {
+    return x;
+}
+foo("foo");
+//# sourceMappingURL=transitive-mapping-original.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map
new file mode 100644
index 0000000000..65af25c1eb
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-original.js.map
@@ -0,0 +1,8 @@
+{
+  "version": 3,
+  "file" : "transitive-mapping-original.js",
+  "sourceRoot": "",
+  "sources": ["typescript-original.ts"],
+  "names": [],
+  "mappings": "AACA,SAAS,GAAG,CAAC,CAAU;IACrB,OAAO,CAAC,CAAC;AACX,CAAC;AACD,GAAG,CAAC,KAAK,CAAC,CAAC"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js
new file mode 100644
index 0000000000..fd956164d3
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js
@@ -0,0 +1,6 @@
+function foo(x) {
+    return x;
+}
+
+foo("foo");
+//# sourceMappingURL=transitive-mapping-three-steps.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map
new file mode 100644
index 0000000000..90459d90f6
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping-three-steps.js.map
@@ -0,0 +1,7 @@
+{
+  "version": 3,
+  "file": "transitive-mapping-three-steps.js",
+  "sources": ["transitive-mapping.js"],
+  "names": ["foo", "x"],
+  "mappings": "AAAA,SAASA,IAAIC;IAAG,OAAOA;AAAC;;AAACD,IAAI,KAAK"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js
new file mode 100644
index 0000000000..183c027f1b
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js
@@ -0,0 +1,2 @@
+function foo(x){return x}foo("foo");
+//# sourceMappingURL=transitive-mapping.js.map
diff --git a/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map
new file mode 100644
index 0000000000..d6a6fa6672
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/transitive-mapping.js.map
@@ -0,0 +1,6 @@
+{
+  "version": 3,
+  "names": ["foo","x"],
+  "sources": ["transitive-mapping-original.js"],
+  "mappings":"AAAA,SAASA,IAAIC,GACT,OAAOA,CACX,CACAD,IAAI"
+}
diff --git a/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts b/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts
new file mode 100644
index 0000000000..cd51c01ba1
--- /dev/null
+++ b/front_end/core/sdk/fixtures/sourcemaps/typescript-original.ts
@@ -0,0 +1,5 @@
+type FooArg = string | number;
+function foo(x : FooArg) {
+  return x;
+}
+foo("foo");
diff --git a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
index 53be4ae4ae..643c9ae784 100644
--- a/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
+++ b/front_end/core/sdk/fixtures/sourcemaps/valid-mapping-empty-groups.js.map
@@ -3,5 +3,6 @@
   "names": [],
   "file": "valid-mapping-empty-groups.js",
   "sources": ["empty-original.js"],
+  "sourcesContent": [""],
   "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 }
